<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: startup | @Lenciel]]></title>
  <link href="http://172.16.121.110:4000/categories/startup/atom.xml" rel="self"/>
  <link href="http://172.16.121.110:4000/"/>
  <updated>2017-05-10T01:29:34+08:00</updated>
  <id>http://172.16.121.110:4000/</id>
  <author>
    <name><![CDATA[Lenciel]]></name>
    <email><![CDATA[lenciel@gmail.com]]></email>
  </author>

  
  <entry>
    <title type="html"><![CDATA[在TestBird学到的——关于管理]]></title>
    <link href="http://172.16.121.110:4000/2016/10/management-things-i-learned-at-testbird/"/>
    <updated>2016-10-26T17:03:21+08:00</updated>
    <id>http://172.16.121.110:4000/2016/10/management-things-i-learned-at-testbird</id>
    <content type="html"><![CDATA[<ol>
<li>沟通是所有工作内容里最困难的部分，学习一些技巧，花足够多的时间，做好自己和内外部的沟通，并且让团队内部小伙伴之间的沟通顺畅。 </li>
<li>多听，少说，学会换位思考。 </li>
<li>在绝大多数创业公司的绝大多数阶段，减缓试错过程中资源消耗的速度是管理者最主要的任务：而要做到这点首先就是严格控制员工的质量和数量。 </li>
<li>招预算允许的最好的人，给他们争取两倍工资，给他们争取尽量多的期权，提升他们的期望值和参与感：他们会做出三倍的输出，因为聪明人都是渴望成功的。 </li>
<li>招自己的朋友，或者朋友推荐的人，会比较靠谱，合作起来也顺畅。但是永远不要招你没有办法开掉的朋友。 </li>
<li>不管融到多少钱，当产品确实征服了一些用户得到验证之后，再开始缓慢地扩大研发团队。 </li>
<li>不同水平的人，需要的管理也不一样。有的人需要明确的步骤才能做好，多给他指点方向；有的人只需要你讲清楚需要什么和为什么需要，他会想出比你更好的办法。 </li>
<li>有人的地方就有江湖，要避免办公室政治，最好的办法是保持团队小而美。但人多起来了之后政治是避免不了的，这个时候要建设矩阵式结构，明确每个人的作用和功能，来减少各种问题。 </li>
<li>团队里面那些对产品没热情对技术没追求的人，和烂代码让code smelly一样会让团队smelly，这种人的害处就好像禁止吸烟的餐厅里面坐了个抽烟的人，会让所有的人都被呛到，要尽早处理。 </li>
<li>通常你在想“我是不是应该开掉这个人”的时候，就到了该开掉的时候了。这是工作的一部分，职业地处理好，不要让事情搞得很戏剧化。 </li>
<li>有些人会有过激的言语或者行为，有时候这是因为创业的压力，有时候可能跟工作都没有关系。不要因为这些影响自己的情绪，要不断和团队沟通大的方向是什么。 </li>
<li>定期的1:1就好像定期查看油箱：如果你偷懒，就要做好有天车开到半山腰的时候没有油了的准备。 </li>
<li>创业公司里做1:1不要谈虚的，多跟核心人员同步他们真正关心的话题：公司现金流和投融资的情况，项目的实际风险，他们具体表现如何等等。坦率一些，讲真话，这样你跟大家同步一些决策的时候就不需要那么多上下文了。 </li>
<li>设定目标要设定困难但是能达到的，对目标的定义要清晰，并且随着实际情况的变化，可以及时调整。 </li>
<li>既要做团队最好的保姆，也需要不断地挑战自己和他们能力的极限。 </li>
<li>对任何一个员工的动作，都会影响到所有的人。如果你对某个人进行了奖励或者把他升成了leader，要让团队里面所有的人明白这是为什么，特别是其他人应该怎样做才能也拿到一样的奖励或者升职。 </li>
<li>如何花钱是公司文化最明显的符号，并且也是最难改变的。它向员工直接说明了对公司来说什么是最重要的。公司聪明地花钱，会让聪明人看到并留下，洗脑只会吓跑他们。 </li>
<li>创业常常不得不经历失败，特别是那种投入了很多精力和心血后还是失败。不是每个人对反复失败都有很好的准备和容忍度，员工尤其如此。一方面，尽量控制往一个有风险的项目上投入的成本，来降低失败后的伤痛和损耗；另一方面，避免把某个功能或者产品描述成会让公司所向披靡的银弹。有的管理者很喜欢这样来鼓舞士气，这样的风险很大，要让“尝试开创一番新事业肯定会遭遇很多失败”变成公司所有部门的共识。 </li>
<li>失败更多时候是对产品或者团队的弱点没有清醒的认识，而不是因为有那些弱点。 </li>
<li>营造一种随时都认为现在的成绩主要是因为运气好而不是大家有多牛逼或者多努力的文化，这样可以给团队一个心理暗示：现在是不错，但是接下来不能再靠运气或者是努力了，要变得更专业，更深入，更细致。 </li>
<li>不要沉溺于讲述如何创业的电影或者书籍，要相信商业社会有它的客观规律，没有人可以靠突然悟到小诀窍成功。 </li>
<li>忽略媒体的报道，特别是那些称赞的报道。不要让员工转发公司的微信，如果他们充满发自内心的骄傲，他们自己会分享。 </li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在TestBird学到的——关于产品]]></title>
    <link href="http://172.16.121.110:4000/2016/10/product-things-i-learned-at-testbird/"/>
    <updated>2016-10-25T17:20:29+08:00</updated>
    <id>http://172.16.121.110:4000/2016/10/product-things-i-learned-at-testbird</id>
    <content type="html"><![CDATA[<p>在TestBird不到两年，时间过得很快也很充实。因为分管的是产品和研发，所以总结一下产品、研发和管理这三方面学到的经验或者教训。</p>

<p>先从产品说起：</p>

<ol>
<li>在最开始的三个星期，透彻了解产品的历史，明白它们发展到当前面貌，其中的偶然与必然。多提问，多记录，多分析，不要想当然，更不要开“上帝视角”。</li>
<li>搞清楚公司的产品是“ 马太驱动”还是“数据驱动”的。</li>
<li>“马太驱动”是本座造的一个词：形容谁光环大谁说了算。在缺乏数据支撑的决策过程里，既然大家都是拍脑袋，很多时候就是谁的屁股大，谁拍了算，但“屁股驱动”有些不太文明所以叫“马太驱动”吧。</li>
<li>“数据驱动”包括了“做什么”和“做得如何”两方面：做什么产品，做哪些功能，需要数据支撑决策；产品做得怎么样，功能用户是否买账，需要数据验证效果。</li>
<li>“数据驱动”是很难实践的，所以发现公司是“马太驱动”的，首先，不要惊慌或者灰心，其次，更要发挥自己的作用，对团队负责，仔细分析，好好推理：做决策的时候好好拍自己的脑袋，不要为了短期利益去拍更大的屁股。</li>
<li>要有“空杯心态”：过去的套路、经验和成绩，和能不能对现在讨论的事做出正确判断，毫无关系：每天我们面对的都是新的商业环境，新的技术平台和新的用户，要有自己的想法，也要有胸怀去聆听别人经过认真思考（最好是有数据支撑）的结论。</li>
<li>在团队里面也要推崇这样的文化。聪明人在一起工作总是会有一些“张力”的，但是要让这种“张力”健康向上：在讨论中，明确讨论的核心是观点是否正确，而无关讨论者自身的价值。很多争论的发生，并不是捍卫“自身观点”的正确，而是防止“自身价值”被挑战。要鼓励前者，唾弃后者，所谓“Strong ideas, weakly held”。</li>
<li>同时，难归难，还是要培养团队特别是管理团队“数据驱动”的习惯：明确产品的品类和发展阶段，有针对性地收集相应的数据，作为决策的有效输入。不要在用户是否喜欢自己的产品这件事情上欺骗自己，要有意识地让团队具备快速有效的试错并不断开发新产品的能力。</li>
<li>有的合伙人或者投资人喜欢看短期，另一些则喜欢听愿景。要证明数据驱动对这两方面都是有好处的，需要准备更多的数据，并且在短期和长期之间有个清晰的规划。多沟通，多讨论，和养成团队任何别的习惯一样，都需要发起者的意志力和沟通技巧。</li>
<li>聚焦。在当前产品遇到问题的时候，很容易陷入“<a href="http://lenciel.com/2015/06/the-next-fucking-new-feature/">下一个功能一定能成为转折点</a>”的泥潭。用数据找到焦点，投入所需的各种资源，包括自己。因为这个点做不好，其他的做好了也白搭。</li>
<li>把其他的功能点交给产品经理和团队最“难搞”的开发去协商，这个开发还能再砍掉一些。</li>
<li>忽略大多数关于UI的建议，反正无论怎么改，50个人会有50种不同的建议。</li>
<li>开放、理性地对待关于流程和功能的建议：及时给予对方反馈，但内部做好版本规划。</li>
<li>把握好“创意”和“产品”的边界：还在“创意”阶段的时候，各方面压力要小很多，一定要有足够的讨论、尝试、数据和推演，确定它真的是一个好的方向。一旦进入“产品”阶段，就需要所有参与者有“传教士”而不是“雇佣兵”的心态。这个时候再来验证是不是一个好的方向，往往只会增加内耗和消磨士气。</li>
<li>值得做的产品都是“困难”或者“未知”的，要能分清楚你的产品属于哪一类，才能判断你和你的团队各方面状态（时间、能力、心态、自身和外部经济条件）是否适合现在做这类产品。</li>
<li>“困难”的事情，通常模式什么样，团队如何搭，甚至产品是怎么做都是清楚的。要具备把困难的事情拆分成一系列简单任务的能力，要能够比较准确地计算出完成这些任务的各种成本，要能听到竞争对手的脚步：通常还有好几帮同样聪明同样努力的人也在解决这些困难。</li>
<li>“未知”的事情则是说，它开创了新的商业模式，然而这种东西是否被市场接纳是未知的。做“未知”的事情，风险更高（相应的成功后收益也更大），很多时候死了不是因为你产品不够好，可能只是时机未到（比如微信没有把支付打通之前做类似于皮皮麻将的App），或者运气不好。而且一旦“未知”的事情被证明是可以成功的，它往往就变成了“困难”的事情而已（你要开始学会聆听对手的脚步了）。</li>
<li>要有信心，即便到了你开始怀疑自己的时候，还是要有信心。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sam Altman给创业者的建议]]></title>
    <link href="http://172.16.121.110:4000/2015/02/startup-advices-from-sam-altman/"/>
    <updated>2015-02-22T22:22:00+08:00</updated>
    <id>http://172.16.121.110:4000/2015/02/startup-advices-from-sam-altman</id>
    <content type="html"><![CDATA[<p>去年创业界的一大盛事就是YC的CEO，斯坦福的退学生<a href="http://blog.samaltman.com/">Sam Altman</a>联手斯坦福大学，开设了课程CS183B：<a href="http://startupclass.samaltman.com/">How To Start A Startup</a>。十周共20节课程请来了各路顶尖人才，从创意、产品、团队和执行这四个YC认为创业最关键的维度分享了如何进行创业。</p>

<p>如果你自己是创业者，个人建议是整个课程可以好好看一遍，反正就算你不会翻墙，因为YC巨大的号召力，国内也有人为这个课程专门做了<a href="http://startupclass.club/">镜像网站</a>并配了字幕。</p>

<p>如果你是蠢蠢欲动想要创业的人，不妨看看Sam Altman给出的这个课程的简化提纲，看看自己是不是适合这样的生活：</p>

<ul>
<li>创业应当从创意和想法开始，而不是一来就开一家公司。当创业还只是围绕一个创意或者一个项目的实现时，承受的压力会小很多，就更愿意接受那些看上去稀奇古怪但实则能量巨大的想法。就算非要开公司，最好的思路也是去集合各式各样好玩的想法并实施。</li>
<li>而与之相反，当你拥有了一家公司的时候，你会面临压力，从而导致对各种各样的想法产生过快的判断。而如果只是一个项目，你就可以花更多时间去确定它是不是真的是一个好的方向：这其实是非常重要的工作，因为创业真正开始之后，你将花费非常多的时间和精力投入到这个方向。</li>
<li>团队中，至少有一个技术合伙人（这个人能从技术角度去帮助实现公司希望拥有的任何产品）</li>
<li>通常来说，选择一个高增长市场远比选择一个份额巨大但增长缓慢的市场要好。特别是如果你发现的高增长市场正好是其他人忽视的。</li>
<li>最好的创业想法是那些看起来很糟但其实非常好的想法（你得具有非凡的信心和判断力）。</li>
<li>去创造直击人性的事物。即便是在其他点上都输得一塌糊涂，但只要做到这点就够了。另一方面，如果做不到这点，其他所有的点都非常出彩也都无济于事。</li>
<li>一旦将创业从“好玩的项目”切换成为公司运作，请果断而且迅速的行动。这时候，不能再花费数周做一项决定，而需要迅速试错：思考一个小时，在下一个小时就得到结果。</li>
<li>让自己变得强大，而且强硬。前进的道路会充满艰辛，即便你自己也会一次又一次的怀疑自己。</li>
<li>找到办法让自己的产品被它们的用户触碰到。一开始即便是靠人力也要做到这点（推荐阅读：<a href="http://www.paulgraham.com/ds.html">this</a>）。</li>
<li>倾听用户的声音，改善产品，然后继续倾听，直到一些用户开始爱上了你的产品（这时候，最好是一小撮，而不是一大群）。而且，请不要在用户是否喜欢你的产品这件事情上欺骗自己。</li>
<li>尽可能的降低你的资源消耗速度，直到你确定你的产品已经捕获了部分用户的芳心，而降低消耗的最简单的方法就是缓慢增加招聘。</li>
<li>规划商业策略，大多数人并没有这样做。然后，偶尔从另一个角度思考一下，如何抵抗自己制定的商业策略。请记住，在未来的某一天你会需要并且成为垄断者的 (in the Peter Thiel sense)。</li>
<li>在融资前一定读读<a href="Read%20this%20before%20you%20raise%20money:%20http://paulgraham.com/fr.html">这个</a></li>
<li>忽略媒体的报道，特别是那些称赞的报道。</li>
<li>在公司的早期就一定要盈利。</li>
<li>尽可能去雇佣那些最好的员工，无论你花费多少时间去寻找他们，都不过分。多给你的员工一些股份，提升他们的期望。聪明、高效的人总是渴望成功的。（推荐阅读：<a href="http://blog.samaltman.com/how-to-hire">this</a>）</li>
<li>当你发现自己雇佣了错误的员工之后，请迅速开除他。</li>
<li>不要和那些你合作起来感觉不那么良好的员工（甚至是合伙人）、伙伴、投资者一起共事。</li>
<li>尝试去摸索规模化获取用户的方法，这时候你需要做的是硬着头皮去学习销售和市场营销工作。顺道说一句，通过花费超过用户价值的价格去获取用户虽然在时下很流行，但请记住，这并不可取。</li>
<li>持续关注用户的增长速度，别停下来，这是衡量一个公司CEO是否合格的最好策略。如果你偶然发现自己说出了“我们的目标不是用户增长”这样的话，请仔细反省一下，自己是否把时间花费在了其他错误的事情上？当然，也记得别让自己被那些虚荣的指标欺骗。</li>
<li>一个成熟创业公司的状态是：公司每个人都能全身心投入到分配给自己的任务当中。这种投入对于几个创始人来说更是至关重要。创业圈里面流行的关于“传教士与雇佣兵”的区别的确存在，而且非常明显。</li>
<li>不要在那些无所谓的事情上浪费时间（这些事不包括产品开发、与用户沟通以及用户增长等，它们都很重要）。比如，沉溺于讲述如何创业的电影或者书籍，与律师或会计开会，参加各式虚张声势的推广会议等。</li>
<li>相反，请将精力放在那些重要的事情上。每天找出两三件最重要的事，这时候变身成为一个工作机器，专注其中，忽略任何外部的干扰。</li>
<li>不要找任何借口，做需要被做的事情。</li>
<li>学习对团队的管理，让小伙伴们都开开心心的。千万别忽略了这点，真的非常重要。</li>
<li>除开创造一个伟大的产品，如果想真正成功，还需要创造一个伟大的公司，所以多花点时间去思考公司文化。</li>
<li>不要小看人脉关系的重要性。</li>
<li>在你真的确定想卖掉自己的心血之前，忽略那些收购意向。事实上，如果一些公司能够避免类似失误，他们也许已经非常成功了。不幸的是，它们过早被收购导致了关门。</li>
<li>努力工作，这是成功的不二法门。虽然每个人都希望走捷径，但目前看来尚未出现。</li>
<li>保持这种状态工作十年。</li>
</ul>


<p>个人觉得，说得非常实诚，真正在花心思做自己的产品的公司肯定能收益良多。当然，最后那句也是最关键的一句：毕竟是九死一生的创业嘛，回档再多次也是正常&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Market Research, Wireframing and Desgin]]></title>
    <link href="http://172.16.121.110:4000/2013/07/market-research/"/>
    <updated>2013-07-15T15:04:00+08:00</updated>
    <id>http://172.16.121.110:4000/2013/07/market-research</id>
    <content type="html"><![CDATA[<a name="L.strong..............................strong."></a>
<h4><strong>点子，执行力和市场</strong></h4>

<p>Quora上有一个著名的<a href="http://www.quora.com/Startup-Advice-and-Strategy/As-first-time-entrepreneurs-what-part-of-the-process-are-people-often-completely-blind-to/answer/Mike-Sellers">问答</a>，Mike Sellers的答案里面有一部分在江湖上流传很广：</p>

<p><blockquote><p>An idea is not a mockup<br/>A mockup is not a prototype<br/>A prototype is not a program<br/>A program is not a product<br/>A product is not a business<br/>And a business is not profits</p></blockquote></p>

<p>这里描述了一个从点子到产品到盈利的状态机，在每个阶段，都有很多人失败了，无法进入下一个阶段。失败的原因，主要是因为面对的系统足够复杂时，可能会有不可预见的各种<a href="http://www.maa.org/devlin/devlin_05_03.html">缺陷</a>。特别是对我们搞技术的而言，虽然可能走完Program这个阶段，但是后面的三个阶段才是真正考验的开始。</p>

<table>
<thead>
<tr>
<th> 阶段      </th>
<th>  完成的条件      </th>
<th> 完成需要的最短时间 </th>
</tr>
</thead>
<tbody>
<tr>
<td> Idea     </td>
<td> 有一个赚钱的点子  </td>
<td> 1分钟  </td>
</tr>
<tr>
<td> Mockup   </td>
<td> 所有流程的Wireframe          </td>
<td> 1天+  </td>
</tr>
<tr>
<td> Prototype</td>
<td> 跑通最关键流程的一个丑陋的实现          </td>
<td> 1周+  </td>
</tr>
<tr>
<td> Program  </td>
<td> 有测试并覆盖了所有流程的完整实现          </td>
<td> 2-4周+  </td>
</tr>
<tr>
<td> Product  </td>
<td> 工业设计，专利，定价，生产等          </td>
<td> 3-6月+  </td>
</tr>
<tr>
<td> Business </td>
<td> 注册，监管机构备案，工资公司准备金等          </td>
<td> 6-12月+  </td>
</tr>
<tr>
<td> Profits  </td>
<td> 以超过成本的价格售出产品          </td>
<td> 1年-正无穷</td>
</tr>
</tbody>
</table>


<p>从完成各个stage需要的时间可以看出，成功的企业都不是只有一个好点子：在状态机的前端，一定是一大堆好的点子。这些点子中的致命缺陷一定要在下面的某个stage才会暴露出来，但足够多的点子是基础。建议有一个专门的地方，<code>Google Docs</code> 也好， <code>OmniFocus</code> 也好，就是个简单的txt也好，保存和整理自己的点子，并且记录这些点子被推动到哪个阶段了。</p>

<a name="L.strong.........strong."></a>
<h5><strong>点子</strong></h5>

<p>一说到开自己的公司，最重要的似乎就是一个好的点子。这就是为什么很多人觉得自己和扎克伯格之间就差一个点子而已<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>；也是为什么那么多完全不生产产品的<a href="http://www.npr.org/blogs/money/2013/06/07/188370495/when-patents-attack-part-two">知识产权风投公司</a>靠着专利费<a href="http://www.plainsite.org/articles/article.html?id=2">活得好好</a>的。换句话来说，在很多人看来，只要有了好点子，如何实现并且推向市场就只是一些细节的问题了。</p>

<a name="L.strong............strong."></a>
<h5><strong>执行力</strong></h5>

<p><a href="http://www.wired.com/wired/archive//6.11/metcalfe_pr.html">Bob Metcalfe</a>，以太网的发明者，3Com的创始人却有另一种认识：</p>

<p><blockquote><p>Metcalfe says his proudest accomplishment at the company was as head of sales and marketing. He claims credit for bringing revenue from zero to more than $1 million a month by 1984. And he&rsquo;s careful to point out that it was this aptitude - not his skill as an inventor - that earned him his fortune.</p></p><p><p>&ldquo;Flocks of MIT engineers come over here,&rdquo; Metcalfe tells me, leading me up the back staircase at Beacon Street. &ldquo;I love them, so I invite them. They look at this and say, &lsquo;Wow! What a great house! I want to invent something like Ethernet.&rdquo;&rsquo; The walls of the narrow stairway are lined with photos and framed documents, like the first stock certificate issued at 3Com, four Ethernet patents, a photo of Metcalfe and Boggs, and articles Metcalfe has written for The New York Times and The Wall Street Journal.</p></p><p><p>&ldquo;I have to sit'em down for an hour and say, &lsquo;No, I don&rsquo;t have this house because I invented Ethernet. I have this house because I went to Cleveland and Schenectady and places like that. I sold Ethernet for a decade. That&rsquo;s why I have this house. It had nothing to do with that brainstorm in 1973.&rdquo;&rsquo;</p></blockquote></p>

<p>从一定程度上这种认识反应了另一种普遍的观点： <strong>执行力，而不是点子，才是创业的关键</strong> 。这种在Hacker News上被<a href="https://www.google.com.hk/search?q=site%3Anews.ycombinator.com+idea+not+execution&amp;qscrl=1">一而再再而三的提及</a>的观点确实是有道理的：冒出一个“创建社交网络”的点子很简单，但是要把它涉及的各种细节，大到是采用<a href="https://www.facebook.com/">对称</a>还是<a href="https://twitter.com/">非对称</a>的社交网络小到“Poke”应该怎么实现，考虑清楚，就不那么容易了。而即使考虑清楚上线后用户也很多，怎么把流行转化成盈利就更加艰难了：看看Second Life或者Digg的下场多么凄惨。</p>

<p>所以如果你开始创业，不妨提醒一下自己：点子或者甚至是专利并没必要放在那么至高无上的位置，能work的prototype要重要得多。可能在你游说投资者的时候，专利显得你的技术比较有门槛有防御性。但是一方面，如果你的东西被别人听到或者看过就能很容易的复制，可能也确实说明了产品的技术门槛比较低。另一方面，“我有一个创建养宠物的人的社交网络的点子”和“我开发了一个可以让养宠物的人快速找到信赖的兽医的系统“相比，后者对投资人的说服力要大多了。</p>

<p>因此创业的时候，你的点子可以大方的拿出来和周围的人讨论，他们会给你一些你意想不到的角度的意见。当然，有一种讨论是例外的，那就是在类似<a href="https://news.ycombinator.com/item?id=3639175">Hacker News</a>这样的创业社区里面。除非你的开发已经到了适合曝光原型的阶段，一般来说最好不要太早曝光你在做的事情。</p>

<p>这也是另一个对创业者来说执行力比点子更重要的原因：一旦你的点子被市场证明是可行的，就会有模仿者。不管多么伟大的社会，一旦一种商业模式被验证，就会有人开始跟进：这是因为找到一个solution比<a href="http://en.wikipedia.org/wiki/Primality_test">验证一个solution</a>难多了。所有跟进的人在抄袭你的核心功能时，都会加上他们自己独特的改进，这个竞争的过程中你必须有很强的执行力才能保持领先并脱颖而出。从Google战胜AltaVista，Facebook战胜Myspace和Friendster的过程都验证了这点。这也是为什么保持专注，不断努力的实现<a href="http://www.ashmaurya.com/2009/11/achievingproductmarketfit/">product-market fit</a>而不要惊动竞争对手显得特别关键的原因。</p>

<a name="L.strong.........strong."></a>
<h5><strong>市场</strong></h5>

<p>除开前面两个观点之外，还有一种观点。站在投资者角度，可以把"点子"对应到"产品"，把"执行力"对应到"团队"。也就是说，一个足够好的团队是可以推动各种执行层面的细节（财务上的，商务上的，技术上的，法律上的），把一个好的点子落实成一个产品的。但是这些仍然不是全部。用<a href="http://pmarchive.com/guide_to_startups_part4.html">Marc Andreessen</a>的话来说：</p>

<p><blockquote><p>Personally, I’ll take the third position – I’ll assert that market is the most impor- tant factor in a startup’s success or failure.</p></p><p><p>Why?</p></p><p><p>In a great market – a market with lots of real potential customers – the market pulls product out of the startup. The market needs to be fulfilled and the market will be fulfilled, by the first viable product that comes along. The product doesn’t need to be great; it just has to basically work. And, the market doesn’t care how good the team is, as long as the team can produce that viable product.</p></blockquote></p>

<a name="L.strong.......................................................................................strong."></a>
<h5><strong>那么究竟什么是最重要的：产品/点子，执行力/团队，还是市场?</strong></h5>

<p>任何有一点儿<a href="http://cs229.stanford.edu/materials.html">机器学习</a>知识的人都能明白这三者是没有绝对的优先顺序的：它们都是关键因子，我们需要挨个解决。首先，我们要解决的问题是如何找到一个好点子？</p>

<a name="L.strong...............strong."></a>
<h5><strong>点子迷宫</strong></h5>

<p>一个好的创始人不应该只是有个好点子，他/她应该具备鸟瞰“点子迷宫”的能力。把解决一个需求的各种点子想象成迷宫里面的各条道路，作为消费者很可能只看到了拿出了产品的公司走的那条路。而作为好的创始人需要了解其他的公司是死在什么样的路上以及它们遇到了什么样的无法解决的问题。下图就是一个迷宫的例子：</p>

<p><img src="/downloads/images/example_of_idea_maze.png" title="Don't touch me..." alt="example of idea maze" /></p>

<p>有时候你不经过前一个迷宫有所积累，就没法到达下一个迷宫并走出去（比如Google是在search上有所收获之后，在<a href="http://googlepress.blogspot.com/2004/04/google-gets-message-launches-gmail.html">eamil</a>上也开始有了建树）。有时候迷宫自己也会随着时间变化（比如<a href="http://readwrite.com/2012/09/24/pandora-internet-radio-fairness-act#awesm=~obLCTtNRcPEnuA">Pandora的iPhone版本</a>）。有时候别的公司无法解决的问题被其他一些公司解决了（<a href="http://www.gartner.com/id%3D334368">Webvan失败了</a>，但是<a href="http://fresh.amazon.com/welcome;jsessionid=555BD9DF6EBBE824BCB76464FB768B3C">Amazon</a>、<a href="http://delivery.walmart.com/usd-estore/index.jsp?referrer=cookiesDetecting">Walmart</a>和<a href="http://shop.safeway.com/ecom/home">Safeway</a>成功的建立了送鲜货的物流）。有的时候解决前面的公司遇到的问题就形成了新公司进入迷宫时手里最有利的武器（比如Google的Pagerank灵感正是来源于Alta Vista在<a href="http://home.web.cern.ch/about/birth-web">1991年</a>还不那么明显的<a href="https://news.ycombinator.com/item?id=3925089">问题</a>）。</p>

<p>就像其他迷宫一样，大多数人都能找到创业迷宫的入口，但是能看到整个局面的人就不那么多了。拿前面图里面的例子来说，一个平庸的创始人可能就看到了"电影音乐分享"或者是"照片分享"的迷宫的入口，但是却看不清这个产业的历史，竞争对手的状况，<a href="http://www.barrysookman.com/2010/05/13/blogged-what-do-limewire-napster-kazaa-and-isohunt-all-have-in-common/">失败的例子</a>和能够让自己脱颖而出的技术。</p>

<p>因此，好的创始人要有能力鸟瞰整个迷宫，了解所有可能的路径和可能的问题。如果你能够使用示例中图表的形式详细的描述整个问题域，分析各种决策树上的各个分支，解释为什么你的计划能够顺利通过迷宫到达出口而不会遇到前面20个公司遇到的这样那样的问题，你可能就真的有一个不错的点子了。这就是为什么了解行业历史和做足够市场调查是那么重要。</p>

<a name="L.strong............strong."></a>
<h5><strong>执行力</strong></h5>

<p>有了好的点子之后，如何建立执行力？其实简单来说，执行力无非是把todo list上的下一个东西做了。这是一个说起来很容易，但做起来非常有难度的事情：你要学会对其他人说不，你要学会对干扰说不，聚精会神地完成你的任务。</p>

<p>在各种保持专注力的方法论中，最好的是Thiel的 <a href="http://blog.idonethis.com/post/37113345206/peter-thiels-unorthodox-management-philosophy-of">One thing</a> ：组织里面每个人在任何时间都应该不仅知道自己首要的任务是什么，同时也要明白别人手里首要任务是什么。Marc Andreessen的 <a href="http://blog.idonethis.com/post/34170232603/marc-andreessens-productivity-trick-to-feeling">anti-todo list</a> 也<a href="http://lencie.cn/blog/2013/03/15/use-done-list-rather-than-todo-list/">值得一试</a>。</p>

<a name="L.strong.....................strong."></a>
<h4><strong>你的目标市场</strong></h4>

<a name="L.strong..............vs................strong."></a>
<h5><strong>创业公司 vs. 小型企业</strong></h5>

<p>清楚创业公司和小企业之间的<a href="http://www.kauffman.org/uploadedFiles/DownLoadableResources/a-tale-of-two-entrepreneurs.pdf">区别</a>是非常重要的。一个创业公司关注的是增长：如何引领行业，如何从小做大，如何创造丰厚的利润。Google，Facebook，Square，AirBnB等，这些公司都是标志性的创业公司。相比而言，小企业的目标可能不是那么宏伟：它们建立的基础多半是在一定地域内的某个行业有一些特别的优势，比如咖啡店，洗衣店等。</p>

<p>这也是为什么创业公司常常出现在互联网领域：这个领域的很多资源是虚拟化的，而虚拟化的资源从1扩展到1亿可比实体的资源要容易多了。比较一下37Signals的扩张和麦当劳星巴克的扩张你就会发现很多不同之处。</p>

<p>另一个明显的区别是小企业一般在很短的时间内就必须开始盈利。否则，会在很短时间内因为止损而关门大吉。创业公司则不同：可能会有很长一段时间是亏损的状态，直到顺利翻盘或者是倒闭。</p>

<p>另外创业公司需要锻炼的就是和资本打交道的能力。VC的钱既可能造成<a href="http://mystartuphas30daystolive.tumblr.com/">严重的问题</a>，也可能让创业公司一飞冲天。做出决定的最核心的考量在于你的野心和你承受失败的能力：如果你不能承受从0开始，那就不要希望做到很大（<a href="http://diffle-history.blogspot.com/">1</a>,<a href="http://www.paulgraham.com/startupmistakes.html">2</a>,<a href="http://www.businessinsider.com/33-startups-that-died-reveal-why-they-failed-2013-6?op=1">3</a>）。</p>

<a name="L.strong...................................................strong."></a>
<h5><strong>创业公司必须清楚自己的成本和利润</strong></h5>

<p>如果你是有一飞冲天的雄心也准备好了迎接失败，那么投身到一个行业之前，也要先调查清楚你的产品是不是能够承载你的梦想。</p>

<p>我们都知道产品的成本会随着产量的增大变低。假设产量、成本和利润的关系如下表所示：</p>

<table>
<thead>
<tr>
<th> 产品产量      </th>
<th>  单位产品成本      </th>
<th> 单位产品利润 </th>
</tr>
</thead>
<tbody>
<tr>
<td> 0&lt;=n&lt;=00     </td>
<td> 1200  </td>
<td> 1000  </td>
</tr>
<tr>
<td> 101&lt;=n&lt;=1000   </td>
<td> 975          </td>
<td> 1000  </td>
</tr>
<tr>
<td> 1001&lt;=n</td>
<td> 700          </td>
<td> 1000  </td>
</tr>
</tbody>
</table>


<p>凭着这张表你就可以筹到大约 <code>$50000</code> 启动资金来完成最初的100个订单，然后准备 <code>$24,7500</code> 用于后续的1000个订单的完成。经过这两个阶段性胜利之后，你大概才仅仅把成本捞回来而已。</p>

<p>这些简单的计算告诉我们：首先，降成本是非常关键的，比如通过使用软件把单位产品的成本变成固定的成本。其次，把整个事情做起来需要的资本是要提前计算的，这也是VC们需要的数据之一。最后，定价也是需要技巧的。由于一开始没有竞争，你可以定一个相对高的价格来赚取足够的成本。而且，<a href="http://innovatobase.wordpress.com/2013/03/04/loyal-customers-vs-groupon-csutomers/">研究证明</a>免费或者是以极低折扣拿到产品的用户是没有忠诚度的。那些给钱的用户会认为自己也参与了产品的过程（比如提出建议等）。</p>

<a name="L.strong.............................................strong."></a>
<h5><strong>创业公司必须清楚经济体的规模</strong></h5>

<p>当有了一个从数据上看起来不错的产品之后，你还要研究所处的市场是什么样一个规模。</p>

<pre><code class="bash">市场规模 = 年均消费总数 x 产品平均价格
</code></pre>

<p>很明显，你如果梦想拥有年销售额10亿的事业，这个市场要不就是产品价格很高，要不就是消费总数很大。下面的一些例子说明了10亿的事业可以如何被构建出来：</p>

<ul>
<li>均价$1，总数超过10亿: Coca Cola</li>
<li>均价$10，总数超过1亿: Johnson and Johnson</li>
<li>均价$100，总数超过千万: Blizzard</li>
<li>均价$1000，总数超过百万: Lenovo</li>
<li>均价$10,000，总数超过十万: Toyota</li>
<li>均价$100,000，总数超过一万: Oracle</li>
<li>均价$1,000,000，总数超过1,000: Countrywide</li>
</ul>


<p>当然，现在全球化程度高，很多市场是超过了10亿的，比如汽车。每年汽车市场大概是<a href="https://en.wikipedia.org/wiki/Automotive_industry#World_motor_vehicle_production">1亿的产量</a>，均价大概是$10000。这就是为什么Google花大价钱研究<a href="http://www.forbes.com/sites/chunkamui/2013/01/22/fasten-your-seatbelts-googles-driverless-car-is-worth-trillions/">无人驾驶车</a>背后的商业考虑：这是个比搜索潜力要大很多的市场。</p>

<p>另外需要注意的是均价低的产品需要自动化程度极高的生产和稳定的质量才会有利润。如果你$1的可乐经常被消费者投诉你是没有办法做下去的。相对的，低价的产品对销售的需求也降低了：你不需要售楼小姐那样巧舌如簧的队伍也能把可乐卖出去，不是吗？</p>

<a name="L.strong...............strong."></a>
<h4><strong>市场调查</strong></h4>

<p>在了解了市场调查的重要性之后，我们究竟如何能够掌握一个市场的规模以及相应的我们的产品需要多少财力人力的投入呢？</p>

<a name="L.strong.....................strong."></a>
<h5><strong>市场调查工具</strong></h5>

<p>假设你现在对一个市场有了兴趣。比如，你相信新闻里面说的<a href="http://www.scmp.com/business/money/markets-investing/article/1076500/yuan-hailed-world-reserve-currency">人民币</a>最终会取代美元成为<a href="http://online.wsj.com/article/SB10001424052702303561504577496233362694486.html">世界通用币</a>。于是你想做一个服务让人们可以方便的把USD换成RMB。你如何验证你的构想是否成立？</p>

<ol>
<li>首先，你要从媒体的报道里面抓取信息，形成一个总体框架。除开媒体，Google Books，美国的<a href="http://www.sec.gov/edgar.shtml">SEC flings</a>和维基百科都会非常有用。</li>
<li>然后，你要学会从Google的商业数据搜索引擎里能拿到的数据中，算出一个市场规模。</li>
<li>熟悉Google的<a href="https://adwords.google.com/um/Signup/Home">Keyword Planner</a>和Facebook的<a href="https://www.facebook.com/ads/create/">Advertiser Tools</a>。</li>
<li>如果前面的研究表明这个市场的确是可以预期的，你可以创建一个类似<a href="http://launchrock.co/">Launchrock</a>的首页，做一些基本的<a href="http://moz.com/beginners-guide-to-seo">SEO</a>。如果你真的要理清并向别人展示你的想法，你可以还需要画一些wireframe。</li>
<li>最后，你可以去Google的<a href="https://adwords.google.com/um/Signup/Home">Adwords</a>或者是Facebook <a href="https://www.facebook.com/advertising">Ads</a>上投放一些广告看看可能的效果。</li>
</ol>


<p>这些步骤主要的目的就是，在你开始投入时间和金钱进行所谓的MVP(<a href="http://en.wikipedia.org/wiki/Minimum_viable_product">Minimum Viable Product</a>)开发之前，需要验证市场的存在性。了解市场这件事情要从数据入手，也是一个重要原则。就像福特说的一样，如果他只是去问每个消费者他们想要什么，可能他们的回答会是：一匹更快的马。</p>

<a name="L.strong...........................strong."></a>
<h5><strong>如何确定产品层次</strong></h5>

<p>在你有了点子，也调查清楚了市场，如果进行你产品的市场定位？首先可以读读Kickstarter的<a href="http://blog.boundforanything.com/2012/02/how-to-set-tiers-on-kickstarter/">product tiers</a>和<a href="http://www.kickstarter.com/blog/trends-in-pricing-and-duration">trends</a>。</p>

<p>这里的思路是，假设你的市场调查面向的市场是一个70亿人的全球市场。那么你的市场调查的表格每一行代表一个人，N列代表一个个他们的属性（地域、职业等），K列代表产品的属性（产品的版本等）。通过<a href="http://www.google.com/insights/consumersurveys/home">Google Consumer Research Surveys</a>或者是<a href="http://answers.onstartups.com/questions/44163/lean-startup-landing-page-test-how-do-i-measure-success">Launchrock landing</a> pages这样的产品，你可以从受访人群中取样得到自己的产品要如何设计。</p>

<p>当然，如果你是认真的要开始一个startup，付费给专业的机构进行市场调查可能比使用这些产品对你来说性价比更高。</p>

<a name="L.strong.Wireframe...Copywriting...Design..strong."></a>
<h4><strong>Wireframe，Copywriting和Design</strong></h4>

<p>一旦确定了要动手，你就得首先设计你的产品网站的mockup，也就是所谓的wireframe。</p>

<a name="L.strong.Wireframe..strong."></a>
<h5><strong>Wireframe</strong></h5>

<p>优秀的Wireframe工具很多，特别是下面几个：</p>

<ul>
<li><a href="http://www.omnigroup.com/products/omnigraffle/">Omnigraffle Pro</a>特别适合专业UX</li>
<li><a href="https://www.lucidchart.com/google_drive/prompt">Lucidchart</a>对团队合作支持很好</li>
<li><a href="https://jetstrap.com/">Jetstrap</a>可以把最终的设计转成Twitter Bootstrap</li>
<li><a href="http://thenextweb.com/apps/2012/11/17/pop-this-iphone-app-is-every-designers-missing-puzzle-piece-for-prototyping-on-paper/">POP</a>可以方便的导入手绘的流程图</li>
</ul>


<p>熟练掌握上面的一两个就足够了，Wireframe的目的是为了得到一个全站的<a href="http://wireframes.linowski.ca/2009/12/omnigraffle-wireflows/">架构和流程示意</a>。</p>

<a name="L.strong.Copywriting..strong."></a>
<h5><strong>Copywriting</strong></h5>

<p>筑造品牌形象的一些原则：</p>

<ul>
<li>通过主页表达：你的核心竞争力和品牌价值必须要在主页里面体现。不要指望用户会点到其他页面。</li>
<li>通过媒体发布：Amazon在进入产品阶段之前就<a href="http://aws.amazon.com/about-aws/whats-new/">先发媒体稿</a>。通过搜集反馈，很快就能知道究竟什么是用户期待的新功能，什么是自己制造的噪声。</li>
<li>研究对手扬长避短：我们在进行技术选型时常常<a href="http://en.wikipedia.org/wiki/Comparison_of_relational_database_management_systems#Fundamental_features">这么做</a>。了解你的竞争对手的缺陷和你的优势，会让你明白究竟什么是你脱颖而出的关键。</li>
<li>数据说话，案例说话：没有什么比市场里面的数据和成功案例更有说服力。</li>
</ul>


<a name="L.strong.Design..strong."></a>
<h5><strong>Design</strong></h5>

<p>设计的一些原则：</p>

<ul>
<li><strong>Vector和Raster图片</strong> ：首先你要明白<a href="http://en.wikipedia.org/wiki/Vector_graphics">vector</a>和<a href="http://en.wikipedia.org/wiki/Raster_graphics">raster</a>的区别。如果可能的话，尽量使用vector，特别是在早期MVP阶段。</li>
<li><strong>对齐，对比度等</strong>：Robin Williams的《<a href="http://www.amazon.com/The-Non-Designers-Design-Book-Typographic/dp/1566091594">Non-Designer&rsquo;s Desgin Book</a>》值得一读。特别是其中提到的<a href="http://www.nurelm.com/themanual/2009/07/07/designing-for-the-non-designer-part-i-the-basics/">4个基本原则</a>：<a href="http://www.vanseodesign.com/web-design/design-basics-alignment/">Alignment</a>，<a href="http://www.vanseodesign.com/web-design/design-basics-repetition/">Repetition</a>，<a href="http://www.vanseodesign.com/web-design/design-basics-contrast/">Contrast</a>，<a href="http://www.vanseodesign.com/web-design/design-basics-proximity-to-know-what-belongs-with-what/">Proximity</a>。</li>
<li><strong>字体和图标</strong> ：尽量使用字体来表达设计。因为字体是矢量图，并且在所有的浏览器里面都可以用 <code>CSS</code>
进行控制和调整。现在还非常集成了矢量的图标的字体库，比如<a href="http://fortawesome.github.io/Font-Awesome/">FontAwesome</a>。</li>
<li><strong>视频，动画</strong>：宁缺毋滥。一定要精心制作，能给客户留下深刻印象同时又深入解析了产品的特性的。</li>
<li><strong>使用Bootstrap，Themeforest，99Designs，Dribble</strong>：当把wireframe变成网页时，不要重新造轮子。Bootstrap是一个免费的框架，和前面提到的Jetstrap合用很有威力。<a href="http://themeforest.net/">Themeforest</a>上的服务要贵一些，一般是$9到$12的模板。而<a href="http://99designs.com/">99Designs</a>这样的专业设计所要大概几百到几千刀。<a href="http://dribbble.com/">Dribble</a>是需找合适Designer的很好的地方。</li>
</ul>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>事实上Facebook的系统之大，后台涉及的技术是非常复杂的：<a href="https://www.facebook.com/notes/facebook-engineering/tao-the-power-of-the-graph/10151525983993920">1</a>，<a href="https://www.facebook.com/note.php?note_id=76191543919">2</a>，<a href="https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920">3</a>。即便是它看起来不那么复杂的前端，也不是你有一个点子就能做好的：你的用户可是几十亿形形色色的人。<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ideas Are Easy]]></title>
    <link href="http://172.16.121.110:4000/2013/01/ideas-are-easy/"/>
    <updated>2013-01-24T23:50:00+08:00</updated>
    <id>http://172.16.121.110:4000/2013/01/ideas-are-easy</id>
    <content type="html"><![CDATA[<p>最近做的一些事情，让本座有一些感触。昨天恰好看到Daniel Tenner的一篇文章，共鸣了3个来小时。</p>

<p>Daniel的文章主要介绍了<a href="https://twitter.com/pr1001" target="_blank">Peter Robinett</a>关于创业的一些经验分享。其中特别有趣的一点是，为什么有创业想法的人，在遇到那些很愿意创业也很有实力的开发者的时候，常常没法说服他们和自己一起创业。</p>

<p>总结一下本座自己的感受：</p>

<p><strong>1. 创业点子其实很容易有，执行力才是最困难的部分</strong></p>

<p>谁没有动过心要弄出个什么，真正要开始做，做下去，做出来，需要不断的学习，需要克服很多的困难。</p>

<p><strong>2. 在和开发者接触的时候，贡献点子的人常常严重的低估开发的工作量和复杂度</strong></p>

<p>贡献点子的人急着要可以理解，被投资人催，被做出来的兴奋驱使，被害怕别人先做出来的恐惧压迫。但是如果不正视开发需要的工作量，开发者很可能会有道不同不相与为谋的感觉，可能就会闪退。</p>

<p><strong>3. 如果不是付费开发，而是提供后期收益分成，必须要求开发者对创业点子及其商业模式有极强的信心</strong></p>

<p>如果不能得到开发者的认同，想要用较低的甚至是0的开发费用让对方加进来，Hmmmmm….</p>

<p><strong>4. 为有点子的人把东西做出来，对开发者来说比一般的拿钱干活有风险一些</strong></p>

<p>优秀的开发人员并不一定擅长所有事情，特别是沟通。我接触过大多数优秀的开发人员讨厌客户（他们说，这帮把需求改来改去的土鳖），讨厌开会（他们说，这是浪费我的时间)，讨厌文档（敏捷带来的一大好处就是可以大大方方的告诉管理人员哥不写文档）。理想的情况下，贡献点子的人需要懂技术，能够先把自己的点子咀嚼一遍，分割成细化的需求，帮开发人员把商务上的一些事情处理完毕等等。</p>

<p>一般的开发人员就比优秀的开发人员讨厌更多的事情。他们一般只负责“开发”部分，如果需要他们涉足开发外的其他领域（甚至是测试、部署或者维护），他们都会感到不适。原因呢，不得不说，大多数时候是因为他们不会。要知道，很多在公司里面很牛的开发人员，牛的都是自己所在的领域而已。</p>

<p><strong>5. 创业点子大多数都是不现实的，做过几个的开发者往往已经能看破这点</strong></p>

<p>这个黄金一般的机会，在他们眼里不是机会，那再怎么说都没有用了。不过如果你咨询的是优秀而且靠谱的开发者，被拒绝后可以回去仔细想想他说的原因，大多数时候他们说的都是有道理的。</p>

<p><strong>6. 技术很好又很愿意创业的人，很多都有自己的点子了</strong></p>

<p>这还用说吗，请参考1. 点子其实很容易有，如果你发现他的点子比你的还好，很多时候你要做的事情就是踹他一脚，让他真正开始做起来。</p>
]]></content>
  </entry>
  
</feed>
