---
layout: post
title: "软件工程师的匠心"
date: 2018-02-09 17:35:30 +0800
comments: true
categories: 

- career
- culture

---

前天去参加年会，来接我的行政部门的同学一开始有些拘谨。聊起来了她告诉我，“我们主任给我说过，技术部的人脾气都很大”。这让我想起前不久和studyboy家吃饭，他太太说在公司遇到一个“技术大牛”，一旦要他处理用户提出的问题就会闹脾气：“我怎么知道为什么他那里用不了，我这里用得好好的。”

有的时候我1:1或者闲聊的时候，也常常会听到这样的话：“公司让我做的这些项目其实我没有什么太大的兴趣，因为技术上比较落后。”

我在想，做过工程师的人大概都会有这份“手艺人”的傲娇，它本来是好事。

“我不在乎这能赚多少钱，这个建筑的艺术性才是我追求的。”

但是我觉得理解匠心，最核心的部分恰恰是理解，“钱是怎么来的”。

钱是怎么来的，问不同的人这个问题，答案多种多样。但实际上，钱，是用户腰包里掏出来的。当然，你可能花着投资人的钱，但他们给你的钱无非是认可有一天你能帮他们从用户腰包里把钱掏出来。

想明白这点，如何赚更多的钱就很容易想到了：找到办法提升你交付的用户价值。

这句话看起来非常显而易见，但是却有很多的潜台词，对于傲娇的工程师来说，并没有那么直观。这也是这篇文章提醒大家的：

* 用户不是因为你花的时间付钱（和咨询/律师等行业不同）
* 用户不是因为你的学识付钱
* 用户甚至不是因为你个人的产出而付钱

最后一点是尤其反直觉的，但事实就是如此：用户是因为你所在的公司作为一个整体交付的价值掏钱。

如果你想戴上耳机，拒绝任何干扰，写出优美的代码，没问题。你光是做好这件事也能够拿到应有的回报。但是如果你没有努力影响其他人，帮助整个团队提高输出的效率和质量，你对整个公司的贡献是有天花板的：你只能贡献那些优美的代码（我们先不讨论是不是只有你自己觉得它们优美）。

在最近几年看球赛的时候，我发现多了一个统计数据，叫on-off splits，用来衡量当特定队员在场上或不在场上时球队表现的差异。这是一个很有意思的数据，因为它在传统的按个人输出进行统计之外，加上了个体对整体表现的影响：比如C罗全场12次射门独中4元，但是他刷出这样的数字时，其他人就踢得未必痛快。

这就是为什么，在我们公司对技术岗位的职级提升时，会不断增加“对其他人影响力”方面的考量。这并不意味着你需要成为一个经理（我们的经理是M线），而是你需要跳出个人的桎梏，站起来看看有没有办法最大化你交付的用户价值。

抛开职级、收入，这还是一个普适的道理。你的用户不会因为你花了很多时间就用它，也不会因为你功力深背景强代码漂亮就用它，大家只会因为你所在的团队提供了“有用的服务”来用它。

你可能会反驳说，就算我是一个让你满意的工程师，我不仅写好程序，还深入需求分析和交互设计，还构建基础设施，还对每个用户反馈认真对待，和团队一起不断打磨产品，但我根本没法控制多少用户会用我辛辛苦苦做出来的产品。

我只是个研发。

实际上，如果你真的关心通过工作能赚多少钱，你不能只是个好的研发：你的公司能够有什么样/多大规模的用户？处于前期，上升期，还是衰退期？我面试很多高级工程师要他们问我问题的时候，他们都问类似于“我们会用influxdb吗”“这边全部生产线都已经上docker了吗”“我进来之后是做DevOps还是自动化”这样的问题。

而不是：作为创业公司你们在解决用户的什么问题？解决这些问题的产品设计得如何，功能完备吗，体验如何？市场和销售能力如何，和研发的配合顺畅吗？产品盈利情况如何，后续有什么计划？

所以，如果你想成为一个收入不错的高级工程师，那么匠心可能主要体现在，把自己放到一个可以持续交付用户价值的公司里面去，交付用户价值。

